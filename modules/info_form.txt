Модуль вывода форм

В том числе используется для авторизации и регистрации пользователей (не не для входа в админку)

/*
если делать вызов через общий модуль форм, то не хватает:

1. определение типов - например, options -> target: user - будет грузить елемент user, в котором будут какие-нибудь особые условия, например для проверки кукисов и выхода
или нет... фигня... тогда проверку кукисов надо делать при вызове шаблона и если ок, то вызывать шаблон default, если нет - то шаблон exit
или шаблон регистрации - так будет лучше

2. отправлять или нет хэш?
*/

пока так:

{
	
	"type" : "registration", // это поле добавится в значение query формы, короче определяет, какой обработчик будет вызван
		// допустимые на данный момент значения:
		// authorisation - авторизация или выход из-под учетной записи
		// registration - регистрация на сайте
		// form - отправка почты с формы с доп. настройками
	"bootstrap" : false, // вкл/выкл бутстрапа
	"get" : true, // отправка по get или post
	"submit" : true, // разрешает выводить кнопку отправки, если строковое значение - то выводит название из поля lang -> action
	"errors" : true, // разрешает выводить информацию об ошибках
	"required" : true, // если нужно, чтобы все поля были обязательными для заполнения, можно указать эту опцию здесь, а не в каждом поле
	"log" : true, // вести лог событий
	"files" : false, // включить, если нужно вместе с формой отправлять файл, при этом отправка формы автоматом будет по post, даже если "get" : true
	"redirect" : true, // разрешить ли редирект со статусом, если да, то после обработки данных будет редирект на страницу _исходный_адрес_/?query=_имя_модуля_&status=_статус_
	
	"form" : [ // перечисляются поля формы
		{
			"name" : "login", // имя инпута - data[name]
			"type" : "text", // тип инпута - text/password/date/email что там еще... для textarea - textarea, для button - submit
			"verify" : "login", // тип проверки значения, используется, соответствует значения функции datavalidation
			"label" : "", // а это поле нужно, чтобы задать лейбл - причем лейбл в отличии от дескрипшена ставится перед инпутом, но суть та же
			"required" : true // нужно, если это поле обязательно для заполнения
		},
		{
			"name" : "passwordconfirm",
			"type" : "password",
			"verify" : "password",
			"text" : "confirm password", // если задано, то будет подставлено в плейсхолдер, а для кнопки - в значение кнопки
			"description" : "confirm your password here" // если задано, то будет создан доп.контейнер span после инпута с этим текстом (а лучше языковой ссылкой в поле names, так что задавайте сами и лучше вида form_label_...)
		}
	]
	
	"send" : { // этот раздел - для отправки уведомлений, например администратору сайта о поступившем заказе и т.п.
		"type" : "email", // тип канала - email, vkontakte, sms, whatsapp (через сервисы-шлюзы)
		"param" : "",
		"id" : "admin@site.com, mail@site.com", // перечисление идентификаторов пользователей
		"key" : "" // это поле для api-key, если вы используете шлюзы
	},

}

Если назначен тип "form", это говорит препроцессору обращаться к обработчику модуля. Обработчик модуля по-умолчанию настроен на отправку сообщений на указанный e-mail адрес и уведомление администратора через e-mail, vkontakte, whatsapp и смс-сервисы.

Отправка сообщений идет через стандартную функцию message, которая принимает данные и настройки и отправляет их функции messageSend, которая, собственно, и занимается отправкой сообщений.

Чтобы предупредить авто-боты, стоит простая система защиты, которая проверяет в полученных данных наличие пустого значения 'check'. Дело в том, что роботы стараются заполнить все поля, а данное поле по-умолчанию должно быть скрыто от пользователя, но не через тип "hidden", а через стиль "display:none". В шаблоне по-умолчанию, если вы выбрали тип "form", данное поле будет добавлено автоматически. Если же вы используете свой шаблон, вам придется прописывать его самостоятельно:

	<input type="text" name="check" value="" style="display:none!important;">


Еще одно поле, без которых данные формы не будут действительными, это поле "hash". В своем шаблоне, причем это не зависит от типа формы, вы должны прописать:

	<input type="hidden" name="hash" value="<?= datacrypt(time()); ?>">

Будьте внимательными к наличию этих двух полей!

========================
Обработка и вывод ошибок
========================

В модуле есть возможность выводить ошибки при указании параметра "errors" : true.

При разработке шаблонов и доработке этого модуля будьте внимательны! Шаблон по-умолчанию принимает код ошибки из объекта $query -> errors и переводит в массив $module -> data['errors'].

Код ошибки считывается из ключа, и по этому ключу ведется поиск ошибки в объекте $lang -> errors, где перечислены самые распространенные системные ошибки. Если же ключ в данном объекте не найден, то выводится значение данного ключа. Здесь массив также предварительно подвергается чистке по языкам, так что можно управлять языками при выводе ошибок.

Вот так будет выведена ошибка 'email' => true:

	"Incorrect email"

А вот так будет выведена ошибка '0' => 'email':

	"email"

А вот так будет выведена ошибка '0' => { 'en' : 'email', 'ru' : 'эл.почта' }:

	для русского языка: "эл.почта",
	для английского языка: "email"

======================================
Кастомизация и обработка формы вручную
======================================

Конечно, на данный момент модуль не может предоставить большие возможности для настройки шаблона. Поэтому, если вам нужна сложная форма, имеет смысл просто ссылаться на данную форму, а сам шаблон целиком кастомизировать.

Самое главное - это соблюдать стандарт.

1. должны быть указаны поля
	
	<input type="hidden" name="query" value="form">
	<input type="hidden" name="param" value="_параметр-модуля_">
	<input type="text" name="check" value="" style="display:none!important;">
	<input type="hidden" name="hash" value="<?= datacrypt(time()); ?>">

2. все данные должны передаваться через

	name="data[_название_]"

3. в данных модуля должен быть файл _параметр-модуля_.ini со всеми данными, как если бы форма вызывалась в автоматическом режиме, в том числе с указанием валидации и обязательных требований, т.к. эти настройки понадобятся при обработке

4. если вы хотите обрабатывать возвращаемые данные формы - в атрибут value или placeholder вставьте код
	
	<?= (!empty($query -> data['_название_'])) ? $query -> data['_название_'] : ''; ?>

5. если вы хотите обрабатывать результат формы
	
	включите настройку "redirect" : true
	в место вывода вставьте проверку
		
		if (!empty($query -> status)) {
			if ($query -> status === 'complete') {
				...
			} else {
				...
			}
		}

==============================
Настройка отправки уведомлений
==============================
	
	"message" : {
		"place" : "столик",
		"date" : "дата",
		"time" : "время",
		"user" : "имя",
		"email" : "email",
		"phone" : "телефон",
		"lang" : "язык",
		"currdate" : "заказ создан",
		"addition" : "комментарии",
		"status" : "статус",
		"subject" : "Новый Заказ",
		"text" : "С сайта поступил новый заказ! Данные заказа:"
	},
	"send" : [
		{
			"type" : "",
					// email, vk, whatsapp, sms, в разработке telegram, viber, skype
			"param" : "",
					// параметр отправки
					// для email это адрес smtp сервера или phpmail
					// для vk это "user_id", "chat_id" или "domain"
					// для смс это адрес шлюза со вставками ключей в фигурных скобках {}
					// для whatsapp это также адрес шлюза
			"id" : "",
					// идентификатор, может быть один или несколько в массиве, например ["..","..",".."]
					// для email это список адресов рассылки
					// для vk это значения user_id, chat_id или domain
					// для смс это номера телефонов для отправки
					// для whatsapp это также номера телефонов
			"key" : ""
					// ключ
					// для email это связка логин:пароль
					// для vk это access_token приложения
					// для смс это массив со значениями ключей, которые будут подставляться в адрес шлюза
					// для whatsapp это token
		}
	]

примеры:
	
	"send" : [
		{
			"type" : "vk",
			"param" : "domain",
			"id" : ["user1", "user2"],
			"key" : "01234567890abcdefghijklmnopqrstuvwxyz01234567890abcdefghijklmnopqrstuvwxyz01234567890"
		},
		{
			"type" : "email",
			"param" : "",
			"id" : ["my@mail.ru", "my@yandex.ru"],
			"key" : ""
		},
		{
			"type" : "sms",
			"param" : "https://{login}:{key}@gate.smsaero.ru/v2/sms/send?number={id}&text={message}&sign={sign}&channel=DIRECT",
			"id" : "79xxxxxxxxx",
			"key" : {
				"login" : "mail@mail.ru",
				"key" : "aAbBcCdDeEfFgGhHiIjJkKlLmMn",
				"sign" : "BIZNES"
			}
		},
		{
			"type" : "whatsapp",
			"param" : "https://web.chat-api.com/instance00000/",
			"id" : "79xxxxxxxxx",
			"key" : {
				"key" : "abcdefghijklmnop",
				"token" : "token",
				"id" : "phone",
				"message" : "body"
			}
		},
		{
			"type" : "whatsappget",
			"param" : "https://panel.apiwha.com/send_message.php",
			"id" : "79xxxxxxxxx",
			"key" : {
				"key" : "TRIAL0123456789ABCDE",
				"token" : "apikey",
				"id" : "number",
				"message" : "text"
			}
		}
	]
